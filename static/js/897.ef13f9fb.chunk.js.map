{"version":3,"file":"static/js/897.ef13f9fb.chunk.js","mappings":"iKAWA,MA2BA,EA3BuC,CACrC,CACEA,KAAM,sBACNC,KAAM,YACNC,MAAO,gBAET,CACEF,KAAM,oBACNC,KAAM,UACNC,MAAO,sBAET,CACEF,KAAM,kBACNC,KAAM,QACNC,MAAO,gBAET,CACEF,KAAM,oBACNC,KAAM,UACNC,MAAO,gBAET,CACEF,KAAM,oBACNC,KAAM,UACNC,MAAO,6B,sBC9BX,MAAMC,EAAyBA,KAE3BC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAW,eAAeF,SAC5BG,EAAaC,KAAKC,IACjBP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAIF,EAAKX,KAAKM,SACjBK,EAAKT,OADkBS,EAAKV,WAKnCG,EAAAA,EAAAA,KAAA,WAASI,UAAW,mBAAmBF,UACrCF,EAAAA,EAAAA,KAACU,EAAAA,SAAQ,CAACC,UAAUX,EAAAA,EAAAA,KAACY,EAAAA,EAAe,IAAIV,UACtCF,EAAAA,EAAAA,KAACa,EAAAA,GAAM,aAQnB,GAAeC,EAAAA,EAAAA,MAAKf,E","sources":["views/discover/pages/configs/subNav-config.tsx","views/discover/discover-page.tsx"],"sourcesContent":["import React from 'react';\n\ninterface SubNavConfig {\n  path: string;\n  name: string;\n  title: string;\n  icon?: React.FC<React.SVGProps<SVGSVGElement>>;\n}\n\ntype SubNavConfigType = SubNavConfig[];\n\nconst subNavConfig: SubNavConfigType = [\n  {\n    path: '/discover/recommend',\n    name: 'recommend',\n    title: '推荐',\n  },\n  {\n    path: '/discover/ranking',\n    name: 'ranking',\n    title: '排行榜',\n  },\n  {\n    path: '/discover/songs',\n    name: 'songs',\n    title: '歌单',\n  },\n  {\n    path: '/discover/singers',\n    name: 'singers',\n    title: '歌手',\n  },\n  {\n    path: '/discover/djradio',\n    name: 'djradio',\n    title: '新碟上架',\n  },\n];\nexport default subNavConfig;\n","import React, { Fragment, memo, Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport SubNavConfig from '@/views/discover/pages/configs/subNav-config';\nimport AppRouteLoading from '@/base-ui/loading/app-route-loading';\n// you can also use React.FC<Props> to get props validation\nconst DiscoverPage: React.FC = () => {\n  return (\n    <Fragment>\n      <div className=\"discover\">\n        <nav className={'discover-nav'}>\n          {SubNavConfig.map((item) => (\n            <Link to={item.path} key={item.name}>\n              {item.title}\n            </Link>\n          ))}\n        </nav>\n        <article className={'discover-article'}>\n          <Suspense fallback={<AppRouteLoading />}>\n            <Outlet />\n          </Suspense>\n        </article>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default memo(DiscoverPage);\n"],"names":["path","name","title","DiscoverPage","_jsx","Fragment","children","_jsxs","className","SubNavConfig","map","item","Link","to","Suspense","fallback","AppRouteLoading","Outlet","memo"],"sourceRoot":""}