{"version":3,"file":"static/js/494.84ca0dd1.chunk.js","mappings":"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","sources":["views/discover/pages/recommend/components/recommend-banners/style/BannerWrapper.tsx","views/discover/pages/recommend/components/recommend-banners/recommend-banners.tsx","hooks/useAppDispatch.tsx","views/discover/pages/recommend/recommend-page.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\n\nconst BannerWrapper = styled.div<{ children?: React.ReactNode }>`\n  position: relative;\n  z-index: 1;\n\n  // todo: use before to settle banner display blur stylus\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: #935a5a;\n    filter: blur(20px);\n    z-index: 0;\n  }\n`;\n\nconst BannerCenterWrapper = styled.div<{\n  children?: React.ReactNode;\n  $BannerImageWidth?: number;\n  $BannerImageHeight?: number;\n  $BannerRightImage?: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${({ $BannerImageHeight }) => `${$BannerImageHeight}px`};\n  width: 980px;\n  margin: 0 auto;\n  position: relative;\n  z-index: 9;\n\n  .banner-items {\n    margin: 0 auto;\n    width: ${({ $BannerImageWidth }) => `${$BannerImageWidth}px`};\n    position: relative;\n    filter: blur(1px);\n\n    .banner-item {\n      overflow: hidden;\n      height: 100%;\n\n      .banner-item-img {\n        width: ${({ $BannerImageWidth }) => `${$BannerImageWidth}px`};\n        height: 100%;\n      }\n    }\n\n    .banner-item-dots {\n      position: absolute;\n      bottom: 10px;\n      left: 0;\n      right: 0;\n      z-index: 11;\n      margin: 0 auto;\n      display: flex;\n      justify-content: center;\n\n      > li {\n        margin: 0 10px;\n        cursor: pointer;\n\n        .item {\n          display: inline-block;\n          width: 10px;\n          height: 10px;\n          border-radius: 5px;\n          background-color: rgba(227, 209, 209, 0.5);\n\n          &:hover,\n          &.is-active {\n            background-color: rgba(238, 117, 117, 0.5);\n          }\n        }\n      }\n    }\n  }\n\n  .banner-right-img {\n    width: 250px;\n    height: 100%;\n    background: #1c1919 url(${(props) => props.$BannerRightImage}) 0 60px/250px\n      100% no-repeat;\n  }\n`;\n\nconst BannerControlWrapper = styled.div<{\n  children?: React.ReactNode;\n}>`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n\n  div {\n    position: absolute;\n    background-color: transparent;\n    cursor: pointer;\n    color: black;\n    font-size: 50px;\n    transform: translateY(-50%);\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n  .btn-left {\n    left: -68px;\n  }\n  .btn-right {\n    right: -68px;\n  }\n`;\n\nexport { BannerWrapper, BannerCenterWrapper, BannerControlWrapper };\n","import React, { memo, useEffect, useState, useRef } from 'react';\nimport { Carousel } from 'antd';\nimport { type BannerDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerBanners';\nimport { BANNER_IMAGE_HEIGHT, BANNER_IMAGE_WIDTH } from '@/constants/banner';\nimport * as DefaultImage from '@/assets/images/default.png';\nimport {\n  BannerWrapper,\n  BannerCenterWrapper,\n  BannerControlWrapper,\n} from '@/views/discover/pages/recommend/components/recommend-banners/style/BannerWrapper';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\n\ninterface RecommendBannersProps {\n  banners: BannerDataTemplateType[];\n}\n\nconst RecommendBanners: React.FC<RecommendBannersProps> = (\n  props: RecommendBannersProps,\n) => {\n  const { banners } = props;\n  const bannerRightImage = new URL(\n    '@/assets/images/bannerRight.png',\n    import.meta.url,\n  ).href;\n  const CarouselRef = useRef(null);\n  const [visibleImages, setVisibleImages] = useState<number[]>([]);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  // todo 实现图片懒加载\n  useEffect(() => {\n    const observer: IntersectionObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const index: number = Number(\n              entry.target.getAttribute('data-index'),\n            );\n            if (!visibleImages.includes(index)) {\n              setVisibleImages((prev) => [...prev, index]);\n            }\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n    );\n    // todo 获取需要被监听的元素集合\n    const imgElements = document.querySelectorAll('img[data-index]');\n    imgElements.forEach((img: Element) => {\n      observer.observe(img);\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [visibleImages]);\n\n  // todo: define event func to control carousel move\n  const BtnOnClickHandler = (isRight: boolean) => {\n    if (CarouselRef.current) {\n      return isRight\n        ? CarouselRef.current?.next()\n        : CarouselRef.current?.prev();\n    }\n  };\n  const iteratorClickHandler = (index: number) => {\n    if (CarouselRef.current) {\n      CarouselRef.current?.goTo(index);\n      setCurrentIndex(index);\n    }\n  };\n\n  return (\n    <BannerWrapper>\n      <BannerCenterWrapper\n        $BannerImageWidth={BANNER_IMAGE_WIDTH}\n        $BannerImageHeight={BANNER_IMAGE_HEIGHT}\n        $BannerRightImage={bannerRightImage}\n      >\n        <div className={'banner-items'}>\n          <Carousel\n            autoplay\n            autoplaySpeed={5000}\n            ref={CarouselRef}\n            effect={'fade'}\n            dots={false}\n            afterChange={(current) => {\n              setCurrentIndex(current);\n            }}\n            beforeChange={(_, next) => {\n              setCurrentIndex(next);\n            }}\n          >\n            {banners &&\n              banners.map((item, index) => {\n                return (\n                  <div key={item.id} className={'banner-item'}>\n                    <a href={item.imageUrl}>\n                      <img\n                        className={'banner-item-img'}\n                        src={item.imageUrl}\n                        data-index={index}\n                        alt={item.title}\n                        title={item.title}\n                        data-src={DefaultImage.default}\n                      />\n                    </a>\n                  </div>\n                );\n              })}\n          </Carousel>\n          <ul className={'banner-item-dots'}>\n            {banners.length &&\n              banners.map((item, index) => {\n                return (\n                  <li key={`${item}-${index}`}>\n                    <span\n                      className={`item ${currentIndex === index ? 'is-active' : ''}`}\n                      onClick={() => iteratorClickHandler(index)}\n                    ></span>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n        <div className={'banner-right-img'}></div>\n        <BannerControlWrapper>\n          <div className={'btn-left'} onClick={() => BtnOnClickHandler(false)}>\n            <LeftOutlined />\n          </div>\n          <div className={'btn-right'} onClick={() => BtnOnClickHandler(true)}>\n            <RightOutlined />\n          </div>\n        </BannerControlWrapper>\n      </BannerCenterWrapper>\n    </BannerWrapper>\n  );\n};\n\nexport default memo(RecommendBanners);\n","import { RootDispatchType } from '@/stores';\nimport { useDispatch } from 'react-redux';\n\nconst useAppDispatch: () => RootDispatchType = useDispatch;\nexport { type RootDispatchType, useAppDispatch };\n","import React, { Fragment, memo, useEffect, useState } from 'react';\nimport { type BannerDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerBanners';\nimport { BANNER_IMAGE_ARRAY } from '@/constants/banner';\nimport RecommendBanners from '@/views/discover/pages/recommend/components/recommend-banners/recommend-banners';\nimport { localCache } from '@/utils';\nimport { useAppDispatch } from '@/hooks';\nimport { fetchRecommendBanners } from '@/views/discover/pages/recommend/store/recommend-store';\n\nconst recommendPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [bannerList, setBannerList] = useState<BannerDataTemplateType[]>(\n    localCache.getCache(BANNER_IMAGE_ARRAY) || [],\n  );\n  // todo 初始化数据\n  useEffect(() => {\n    dispatch(fetchRecommendBanners())\n      .then((res) => {\n        if (res) {\n          setBannerList(res.payload);\n        }\n      })\n      .catch(() => {\n        console.log('请求Banners数据失败');\n      });\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      <div>\n        <RecommendBanners banners={bannerList} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default memo(recommendPage);\n"],"names":["BannerWrapper","styled","div","BannerCenterWrapper","_ref","$BannerImageHeight","_ref2","$BannerImageWidth","_ref3","props","$BannerRightImage","BannerControlWrapper","RecommendBanners","banners","bannerRightImage","URL","href","CarouselRef","useRef","visibleImages","setVisibleImages","useState","currentIndex","setCurrentIndex","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","index","Number","target","getAttribute","includes","prev","unobserve","document","querySelectorAll","img","observe","disconnect","BtnOnClickHandler","isRight","_CarouselRef$current","_CarouselRef$current2","current","next","_jsx","children","_jsxs","BANNER_IMAGE_WIDTH","BANNER_IMAGE_HEIGHT","className","Carousel","autoplay","autoplaySpeed","ref","effect","dots","afterChange","beforeChange","_","map","item","imageUrl","src","alt","title","DefaultImage","id","length","onClick","_CarouselRef$current3","goTo","iteratorClickHandler","LeftOutlined","RightOutlined","memo","useAppDispatch","useDispatch","recommendPage","dispatch","bannerList","setBannerList","localCache","getCache","BANNER_IMAGE_ARRAY","fetchRecommendBanners","then","res","payload","catch","console","log","Fragment"],"sourceRoot":""}