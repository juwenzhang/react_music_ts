{"version":3,"file":"static/js/872.e361799e.chunk.js","mappings":"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","sources":["views/discover/pages/recommend/components/recommend-banners/style/BannerWrapper.tsx","hooks/useGetImageColor.tsx","views/discover/pages/recommend/components/recommend-banners/recommend-banners.tsx","hooks/useAppDispatch.tsx","views/discover/pages/recommend/style.ts","views/discover/pages/recommend/components/recommend-hot/style/recommendHotWrapper.tsx","components/section-cards/style/sectionCardsWrapper.tsx","components/section-header/style/sectionHeaderWrapper.tsx","components/section-header/section-header.tsx","components/section-card/style/SectionCardWrapper.tsx","components/section-card/section-card.tsx","components/section-cards/section-cards.tsx","views/discover/pages/recommend/components/recommend-hot/recommend-hot.tsx","views/discover/pages/recommend/recommend-page.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\n\nconst BannerWrapper = styled.div<{\n  children?: React.ReactNode;\n  $BannerImageColor: string;\n}>`\n  position: relative;\n  z-index: 1;\n\n  // todo: use before to settle banner display blur stylus\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: ${({ $BannerImageColor }) => $BannerImageColor};\n    filter: blur(20px);\n    z-index: 0;\n  }\n`;\n\nconst BannerCenterWrapper = styled.div<{\n  children?: React.ReactNode;\n  $BannerImageWidth?: number;\n  $BannerImageHeight?: number;\n  $BannerRightImage?: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${({ $BannerImageHeight }) => `${$BannerImageHeight}px`};\n  width: 980px;\n  margin: 0 auto;\n  position: relative;\n  z-index: 9;\n\n  .banner-items {\n    margin: 0 auto;\n    width: ${({ $BannerImageWidth }) => `${$BannerImageWidth}px`};\n    position: relative;\n\n    .banner-item {\n      overflow: hidden;\n      height: 100%;\n\n      .banner-item-img {\n        width: ${({ $BannerImageWidth }) => `${$BannerImageWidth}px`};\n        height: 100%;\n      }\n    }\n\n    .banner-item-dots {\n      position: absolute;\n      bottom: 10px;\n      left: 0;\n      right: 0;\n      z-index: 11;\n      margin: 0 auto;\n      display: flex;\n      justify-content: center;\n\n      > li {\n        margin: 0 10px;\n        cursor: pointer;\n\n        .item {\n          display: inline-block;\n          width: 10px;\n          height: 10px;\n          border-radius: 5px;\n          background-color: rgba(227, 209, 209, 0.5);\n\n          &:hover,\n          &.is-active {\n            background-color: rgba(238, 117, 117, 0.5);\n          }\n        }\n      }\n    }\n  }\n\n  .banner-right-img {\n    width: 250px;\n    height: 100%;\n    background: #1c1919 url(${(props) => props.$BannerRightImage}) 0 60px/250px\n      100% no-repeat;\n  }\n`;\n\nconst BannerControlWrapper = styled.div<{\n  children?: React.ReactNode;\n}>`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n\n  div {\n    position: absolute;\n    background-color: transparent;\n    cursor: pointer;\n    color: black;\n    font-size: 50px;\n    transform: translateY(-50%);\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n  .btn-left {\n    left: -68px;\n  }\n  .btn-right {\n    right: -68px;\n  }\n`;\n\nexport { BannerWrapper, BannerCenterWrapper, BannerControlWrapper };\n","const useGetImageColor = async (imageUrl: string): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.src = imageUrl;\n\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        reject('Failed to get canvas context');\n        return;\n      }\n\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0);\n\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imageData.data;\n\n      const colorMap: { [key: string]: number } = {};\n\n      for (let i = 0; i < data.length; i += 4) {\n        const r = data[i];\n        const g = data[i + 1];\n        const b = data[i + 2];\n        const a = data[i + 3];\n\n        // 忽略透明度较低的像素\n        if (a < 128) continue;\n\n        const color = `rgb(${r},${g},${b})`;\n        colorMap[color] = (colorMap[color] || 0) + 1;\n      }\n\n      let mainColor = '';\n      let maxCount = 0;\n\n      for (const color in colorMap) {\n        if (colorMap[color] > maxCount) {\n          mainColor = color;\n          maxCount = colorMap[color];\n        }\n      }\n\n      resolve(mainColor);\n    };\n\n    img.onerror = () => {\n      reject('Failed to load image');\n    };\n  });\n};\n\nexport default useGetImageColor;\n","import React, { memo, useEffect, useState, useRef } from 'react';\nimport { Carousel } from 'antd';\nimport { type BannerDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerBanners';\nimport { BANNER_IMAGE_HEIGHT, BANNER_IMAGE_WIDTH } from '@/constants/banner';\nimport * as DefaultImage from '@/assets/images/default.png';\nimport {\n  BannerWrapper,\n  BannerCenterWrapper,\n  BannerControlWrapper,\n} from '@/views/discover/pages/recommend/components/recommend-banners/style/BannerWrapper';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport useGetImageColor from '@/hooks/useGetImageColor';\n\ninterface RecommendBannersProps {\n  banners: BannerDataTemplateType[];\n}\n\nconst RecommendBanners: React.FC<RecommendBannersProps> = (\n  props: RecommendBannersProps,\n) => {\n  const { banners } = props;\n  const bannerRightImage = new URL(\n    '@/assets/images/bannerRight.png',\n    import.meta.url,\n  ).href;\n  const CarouselRef = useRef(null);\n  const [visibleImages, setVisibleImages] = useState<number[]>([]);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [imageColor, setImageColor] = useState<string>('#fff');\n\n  useEffect(() => {\n    setTimeout(() => {\n      useGetImageColor(banners[currentIndex].imageUrl).then((color) => {\n        setImageColor(color);\n      });\n    }, 0);\n  }, [currentIndex, banners]);\n\n  // todo 实现图片懒加载\n  useEffect(() => {\n    const observer: IntersectionObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const index: number = Number(\n              entry.target.getAttribute('data-index'),\n            );\n            if (!visibleImages.includes(index)) {\n              setVisibleImages((prev) => [...prev, index]);\n            }\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n    );\n    // todo 获取需要被监听的元素集合\n    const imgElements = document.querySelectorAll('img[data-index]');\n    imgElements.forEach((img: Element) => {\n      observer.observe(img);\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [visibleImages]);\n\n  // todo: define event func to control carousel move\n  const BtnOnClickHandler = async (isRight: boolean) => {\n    if (CarouselRef.current) {\n      const mainColor = await useGetImageColor(banners[currentIndex].imageUrl);\n      setImageColor(mainColor);\n      return isRight\n        ? CarouselRef.current?.next()\n        : CarouselRef.current?.prev();\n    }\n  };\n  const iteratorClickHandler = (index: number) => {\n    if (CarouselRef.current) {\n      CarouselRef.current?.goTo(index);\n      setCurrentIndex(index);\n    }\n  };\n\n  return (\n    <BannerWrapper $BannerImageColor={imageColor}>\n      <BannerCenterWrapper\n        $BannerImageWidth={BANNER_IMAGE_WIDTH}\n        $BannerImageHeight={BANNER_IMAGE_HEIGHT}\n        $BannerRightImage={bannerRightImage}\n      >\n        <div className={'banner-items'}>\n          <Carousel\n            autoplay\n            autoplaySpeed={5000}\n            ref={CarouselRef}\n            effect={'fade'}\n            dots={false}\n            afterChange={(current) => {\n              setCurrentIndex(current);\n            }}\n            beforeChange={(_, next) => {\n              setCurrentIndex(next);\n            }}\n          >\n            {banners &&\n              banners.map((item, index) => {\n                return (\n                  <div key={item.id} className={'banner-item'}>\n                    <a href={item.imageUrl}>\n                      <img\n                        className={'banner-item-img'}\n                        src={item.imageUrl}\n                        data-index={index}\n                        alt={item.title}\n                        title={item.title}\n                        data-src={DefaultImage.default}\n                      />\n                    </a>\n                  </div>\n                );\n              })}\n          </Carousel>\n          <ul className={'banner-item-dots'}>\n            {banners.length &&\n              banners.map((item, index) => {\n                return (\n                  <li key={`${item}-${index}`}>\n                    <span\n                      className={`item ${currentIndex === index ? 'is-active' : ''}`}\n                      onClick={() => iteratorClickHandler(index)}\n                    ></span>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n        <div className={'banner-right-img'}></div>\n        <BannerControlWrapper>\n          <div className={'btn-left'} onClick={() => BtnOnClickHandler(false)}>\n            <LeftOutlined />\n          </div>\n          <div className={'btn-right'} onClick={() => BtnOnClickHandler(true)}>\n            <RightOutlined />\n          </div>\n        </BannerControlWrapper>\n      </BannerCenterWrapper>\n    </BannerWrapper>\n  );\n};\n\nexport default memo(RecommendBanners);\n","import { RootDispatchType } from '@/stores';\nimport { useDispatch } from 'react-redux';\n\nconst useAppDispatch: () => RootDispatchType = useDispatch;\nexport { type RootDispatchType, useAppDispatch };\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst RecommendContentWrapper = styled.div<{ children?: React.ReactNode }>`\n  border: 1px solid #d3d3d3;\n  width: 980px;\n  display: flex;\n  margin: 10px auto;\n\n  .recommend-left,\n  .recommend-right {\n    background-color: #e7dcdc;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n\n  .recommend-left {\n    width: 729px;\n  }\n\n  .recommend-right {\n    margin-left: 1px;\n    width: 250px;\n  }\n`;\n\nexport default RecommendContentWrapper;\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst RecommendHotWrapper = styled.div<{ children: React.ReactNode }>``;\n\nexport default RecommendHotWrapper;\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst SectionCardsWrapper = styled.div<{ children?: React.ReactNode }>`\n  margin-bottom: 20px;\n  width: auto;\n  position: relative;\n\n  .hot-list {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    background-color: #fff;\n  }\n\n  .hot-scroll {\n    margin-top: 10px;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    overflow-x: auto;\n    padding-left: 4px;\n    border: 1px solid #d5d0d0;\n    background-color: #eee7e7;\n    position: relative;\n    scroll-behavior: smooth;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .hot-scroll-iterator {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    z-index: 1;\n    .hot-scroll-icon-left,\n    .hot-scroll-icon-right {\n      font-size: 20px;\n      position: absolute;\n      top: 60%;\n      transform: translateY(-50%);\n      transition: all 0.3s ease;\n      cursor: pointer;\n      padding: 5px;\n      background-color: rgba(0, 0, 0, 0.3);\n      color: white;\n      border-radius: 50%;\n      z-index: 11;\n    }\n\n    .hot-scroll-icon-left {\n      left: -20px;\n    }\n\n    .hot-scroll-icon-right {\n      right: -20px;\n    }\n  }\n`;\nexport default SectionCardsWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SectionHeaderWrapper = styled.div<{ children: React.ReactNode }>`\n  background-color: #d3d3d3;\n  border-bottom: 2px solid #c10d0c;\n  height: 40px;\n  padding: 0 10px 4px 34px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .section-header-left {\n    display: flex;\n    align-items: center;\n\n    .section-header-title {\n      font-size: 20px;\n      margin-right: 20px;\n    }\n\n    .section-header-keywords {\n      display: flex;\n      align-items: center;\n\n      .section-header-keyword {\n        .section-header-keyword-text {\n          font-size: 12px;\n          padding: 0 20px;\n          border-right: 1px solid #7e7777;\n          &:hover {\n            text-decoration-line: underline;\n          }\n        }\n      }\n      .section-header-keyword:last-child {\n        .section-header-keyword-text {\n          border-right: none;\n        }\n      }\n      .section-header-keyword:first-child {\n        .section-header-keyword-text {\n          padding-left: 0;\n        }\n      }\n    }\n  }\n\n  .section-header-right {\n    display: flex;\n    cursor: pointer;\n    margin-right: 10px;\n\n    .section-header-right-more,\n    .section-header-right-icon {\n      font-size: 12px;\n    }\n\n    .section-header-right-icon {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      margin-left: 4px;\n    }\n\n    &:hover {\n      text-decoration-line: underline;\n      .section-header-right-more {\n        color: skyblue;\n      }\n      .section-header-right-icon {\n        color: darkred;\n      }\n    }\n  }\n`;\n\nexport default SectionHeaderWrapper;\n","import React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport SectionHeaderWrapper from '@/components/section-header/style/sectionHeaderWrapper';\n\ninterface SectionHeaderProps {\n  children?: React.ReactNode;\n  title?: string;\n  keywords?: string[];\n  toPath?: string;\n}\nconst SectionHeader: React.FC<SectionHeaderProps> = (props) => {\n  const { title, keywords, toPath } = props;\n  const navigate = useNavigate();\n  const jumpRoute = (path: string) => {\n    navigate(path);\n  };\n  return (\n    <SectionHeaderWrapper>\n      <div className={'section-header-left'}>\n        <h3 className={'section-header-title'}>{title}</h3>\n        <div className={'section-header-keywords'}>\n          {keywords?.map((item, index) => (\n            <div className={'section-header-keyword'} key={index}>\n              <span className={'section-header-keyword-text'}>{item}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div\n        className={'section-header-right'}\n        onClick={() => jumpRoute(toPath ?? '/')}\n      >\n        <div className={'section-header-right-more'}>更多</div>\n        <div className={'section-header-right-icon'}>\n          <ArrowRightOutlined />\n        </div>\n      </div>\n    </SectionHeaderWrapper>\n  );\n};\n\nexport default memo(SectionHeader);\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst SectionCardWrapper = styled.div<{ children: React.ReactNode }>`\n  width: 160px;\n  height: 180px;\n  margin: 20px 5px 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  position: relative;\n  box-sizing: border-box;\n\n  .card-top {\n    box-sizing: content-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .card-top-cover {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background-color: rgba(229, 221, 221, 0.3);\n      z-index: 2;\n\n      .card-play-info {\n        position: absolute;\n        bottom: 0;\n        display: block;\n        width: 100%;\n        height: 40px;\n        background-color: rgba(124, 121, 121, 0.7);\n\n        .card-play-icon {\n          float: left;\n          margin-left: 5px;\n          margin-top: 8px;\n          height: 100%;\n\n          svg {\n            line-height: 40px;\n            font-size: 20px;\n            color: #1f1e1e;\n          }\n        }\n\n        .play-icon {\n          margin-right: 5px;\n          font-size: 20px;\n          color: #333333;\n          float: right;\n          line-height: 40px;\n        }\n      }\n    }\n  }\n\n  .card-bottom {\n    width: 140px;\n    height: 40px;\n    box-sizing: border-box;\n    transition: all 500ms ease;\n    // 实现文本溢出的解决方案吧\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    &:hover {\n      text-decoration-line: underline;\n    }\n  }\n`;\n\nexport default SectionCardWrapper;\n","import React, { memo } from 'react';\nimport SectionCardWrapper from '@/components/section-card/style/SectionCardWrapper';\nimport { PlayCircleOutlined } from '@ant-design/icons';\n\ninterface SectionCardProps {\n  children?: React.ReactNode;\n  imageUrl?: string;\n  title?: string;\n  likeNumber?: string;\n}\n\nconst SectionCard: React.FC<SectionCardProps> = (props) => {\n  const { imageUrl, title } = props;\n  return (\n    <SectionCardWrapper>\n      <div className=\"card-top\">\n        <img src={imageUrl} width=\"140px\" alt=\"图片正在加载中……\" />\n        <div className={'card-top-cover'}>\n          <span className=\"card-play-info\">\n            <span className=\"card-play-icon\">\n              <svg\n                width=\"25\"\n                height=\"25\"\n                viewBox=\"0 0 48 48\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M4 28C4 26.8954 4.89543 26 6 26H10V38H6C4.89543 38 4 37.1046 4 36V28Z\"\n                  fill=\"none\"\n                />\n                <path\n                  d=\"M38 26H42C43.1046 26 44 26.8954 44 28V36C44 37.1046 43.1046 38 42 38H38V26Z\"\n                  fill=\"none\"\n                />\n                <path\n                  d=\"M10 36V24C10 16.268 16.268 10 24 10C31.732 10 38 16.268 38 24V36M10 26H6C4.89543 26 4 26.8954 4 28V36C4 37.1046 4.89543 38 6 38H10V26ZM38 26H42C43.1046 26 44 26.8954 44 28V36C44 37.1046 43.1046 38 42 38H38V26Z\"\n                  stroke=\"#1b1a1a\"\n                  strokeWidth=\"4\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M16 32H20L22 26L26 38L28 32H32\"\n                  stroke=\"#1b1a1a\"\n                  strokeWidth=\"4\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </span>\n            <span className={'play-icon'}>\n              <PlayCircleOutlined />\n            </span>\n          </span>\n        </div>\n      </div>\n      <div className=\"card-bottom\">{title}</div>\n    </SectionCardWrapper>\n  );\n};\n\nexport default memo(SectionCard);\n","import React, { memo, useRef } from 'react';\nimport SectionCardsWrapper from '@/components/section-cards/style/sectionCardsWrapper';\nimport { type HotDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerHot';\nimport SectionHeader from '@/components/section-header/section-header';\nimport SectionCard from '@/components/section-card/section-card';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\n\ninterface SectionCardsProps {\n  children?: React.ReactNode;\n  title: string;\n  keywords?: string[];\n  toPath: string;\n  cards: HotDataTemplateType[];\n  mode: 'card' | 'scroll';\n}\n\nconst SectionCards: React.FC<SectionCardsProps> = (props) => {\n  const { title, keywords, toPath, cards, mode } = props;\n  const hotListRef = useRef<HTMLDivElement>(null);\n\n  const moveScrollElement = (direction: 'left' | 'right') => {\n    /* todo: 平滑滚动实现函数， ease-in-out 平滑滚动的实现吧 */\n    const easeInOutQuad = (\n      t: number,\n      b: number,\n      c: number,\n      d: number,\n    ): number => {\n      t /= d / 2;\n      if (t < 1) return (c / 2) * t * t + b;\n      t--;\n      return (-c / 2) * (t * (t - 2) - 1) + b;\n    };\n    if (hotListRef.current) {\n      /* todo: 滚动逻辑 */\n      const scrollAmount = 210; // 每次滚动的距离\n      let newScrollLeft = hotListRef.current.scrollLeft;\n      if (direction === 'left') {\n        newScrollLeft -= scrollAmount;\n      } else if (direction === 'right') {\n        newScrollLeft += scrollAmount;\n      }\n\n      /* todo: 动画帧函数 */\n      let startTimestamp = 0;\n      const currentScrollLeft = hotListRef.current.scrollLeft;\n      const scrollDiff = newScrollLeft - currentScrollLeft;\n      const duration = 300;\n      const frame = (timestamp: number) => {\n        if (!startTimestamp) startTimestamp = timestamp;\n        const progress = timestamp - startTimestamp;\n        hotListRef.current.scrollLeft = easeInOutQuad(\n          progress,\n          currentScrollLeft,\n          scrollDiff,\n          duration,\n        );\n        if (progress < duration) {\n          requestAnimationFrame(frame);\n        }\n      };\n      requestAnimationFrame(frame);\n    }\n  };\n  return (\n    <SectionCardsWrapper>\n      <SectionHeader title={title} keywords={keywords} toPath={toPath} />\n      <div\n        className={`${mode === 'card' ? 'hot-list' : 'hot-scroll'}`}\n        ref={hotListRef}\n      >\n        {cards.map((item) => (\n          <div key={item.id}>\n            <SectionCard imageUrl={item.imageUrl} title={item.title} />\n          </div>\n        ))}\n      </div>\n      {mode === 'scroll' ? (\n        <div className=\"hot-scroll-iterator\">\n          <div\n            className={'hot-scroll-icon-left'}\n            onClick={() => moveScrollElement('left')}\n          >\n            <LeftOutlined />\n          </div>\n          <div\n            className={'hot-scroll-icon-right'}\n            onClick={() => moveScrollElement('right')}\n          >\n            <RightOutlined />\n          </div>\n        </div>\n      ) : null}\n    </SectionCardsWrapper>\n  );\n};\n\nexport default memo(SectionCards);\n","import React, { memo } from 'react';\nimport RecommendHotWrapper from '@/views/discover/pages/recommend/components/recommend-hot/style/recommendHotWrapper';\nimport { HotDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerHot';\nimport SectionCards from '@/components/section-cards/section-cards';\n\ninterface RecommendHotProps {\n  children?: React.ReactNode;\n  hotList: HotDataTemplateType[];\n}\n\nconst RecommendHot: React.FC<RecommendHotProps> = (props) => {\n  const { hotList } = props;\n  return (\n    <RecommendHotWrapper>\n      <SectionCards\n        title={'热门歌单推荐'}\n        keywords={['华语', '流行', '摇滚', '民谣', '电子']}\n        toPath={'/discover/ranking'}\n        cards={hotList.slice(0, 8)}\n        mode={'card'}\n      />\n      <SectionCards\n        title={'新碟上架'}\n        toPath={'/discover/djradio'}\n        cards={hotList.slice(8, 28)}\n        mode={'scroll'}\n      />\n    </RecommendHotWrapper>\n  );\n};\nexport default memo(RecommendHot);\n","import React, { Fragment, memo, useEffect, useState } from 'react';\nimport { type BannerDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerBanners';\nimport { BANNER_IMAGE_ARRAY } from '@/constants/banner';\nimport RecommendBanners from '@/views/discover/pages/recommend/components/recommend-banners/recommend-banners';\nimport { localCache } from '@/utils';\nimport { useAppDispatch } from '@/hooks';\nimport {\n  fetchRecommendBanners,\n  fetchRecommendHot,\n} from '@/views/discover/pages/recommend/store/recommend-store';\nimport RecommendContentWrapper from '@/views/discover/pages/recommend/style';\nimport RecommendHot from '@/views/discover/pages/recommend/components/recommend-hot/recommend-hot';\nimport { HotDataTemplateType } from '@/views/discover/pages/recommend/faker/recommend-fakerHot';\n\nconst recommendPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [bannerList, setBannerList] = useState<BannerDataTemplateType[]>(\n    localCache.getCache(BANNER_IMAGE_ARRAY) || [],\n  );\n  const [hotList, setHotList] = useState<HotDataTemplateType[]>([]);\n\n  // todo 初始化数据\n  useEffect(() => {\n    dispatch(fetchRecommendBanners())\n      .then((res) => {\n        if (res) {\n          setBannerList(res.payload);\n        }\n      })\n      .catch(() => {\n        console.log('请求Banners数据失败');\n      });\n    dispatch(fetchRecommendHot())\n      .then((res) => {\n        if (res) {\n          setHotList(res.payload as HotDataTemplateType[]);\n        }\n      })\n      .catch(() => {\n        console.log('请求热门歌单数据失败');\n      });\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      <div>\n        <RecommendBanners banners={bannerList} />\n        <RecommendContentWrapper>\n          <div className={'recommend-left'}>\n            <RecommendHot hotList={hotList} />\n          </div>\n          <div className={'recommend-right'}>right</div>\n        </RecommendContentWrapper>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default memo(recommendPage);\n"],"names":["BannerWrapper","styled","div","_ref","$BannerImageColor","BannerCenterWrapper","_ref2","$BannerImageHeight","_ref3","$BannerImageWidth","_ref4","props","$BannerRightImage","BannerControlWrapper","async","Promise","resolve","reject","img","Image","crossOrigin","src","imageUrl","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","data","getImageData","colorMap","i","length","r","g","b","color","mainColor","maxCount","onerror","RecommendBanners","banners","bannerRightImage","URL","href","CarouselRef","useRef","visibleImages","setVisibleImages","useState","currentIndex","setCurrentIndex","imageColor","setImageColor","useEffect","setTimeout","useGetImageColor","then","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","index","Number","target","getAttribute","includes","prev","unobserve","querySelectorAll","observe","disconnect","BtnOnClickHandler","current","_CarouselRef$current","_CarouselRef$current2","isRight","next","_jsx","children","_jsxs","BANNER_IMAGE_WIDTH","BANNER_IMAGE_HEIGHT","className","Carousel","autoplay","autoplaySpeed","ref","effect","dots","afterChange","beforeChange","_","map","item","alt","title","DefaultImage","id","onClick","_CarouselRef$current3","goTo","iteratorClickHandler","LeftOutlined","RightOutlined","memo","useAppDispatch","useDispatch","SectionHeader","keywords","toPath","navigate","useNavigate","SectionHeaderWrapper","ArrowRightOutlined","SectionCard","SectionCardWrapper","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","PlayCircleOutlined","SectionCards","cards","mode","hotListRef","moveScrollElement","direction","scrollAmount","newScrollLeft","scrollLeft","startTimestamp","currentScrollLeft","scrollDiff","duration","frame","timestamp","progress","easeInOutQuad","t","c","requestAnimationFrame","SectionCardsWrapper","RecommendHot","hotList","RecommendHotWrapper","slice","recommendPage","dispatch","bannerList","setBannerList","localCache","getCache","BANNER_IMAGE_ARRAY","setHotList","fetchRecommendBanners","res","payload","catch","console","log","fetchRecommendHot","Fragment","RecommendContentWrapper"],"sourceRoot":""}